<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename field &apos;overwriteFiles&apos; in &apos;com.sgnn7.cpassistant.Copier&apos; to &apos;overwriteFilesEnabled&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.Copier.overwriteFiles&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.Copier.overwriteFilesEnabled&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;overwriteFiles&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/src&lt;com.sgnn7.cpassistant{Copier.java[Copier^overwriteFiles" name="overwriteFilesEnabled" references="true" setter="false" stamp="1278205114969" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;filename&apos; in &apos;com.sgnn7.cpassistant.CopierTest.MockedCopyTestObject&apos; to &apos;failureFilename&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierTest.MockedCopyTestObject.filename&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.CopierTest.MockedCopyTestObject.failureFilename&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;filename&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java[CopierTest[MockedCopyTestObject^filename" name="failureFilename" references="true" setter="false" stamp="1278632963356" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;exception&apos; in &apos;com.sgnn7.cpassistant.CopierTest.MockedCopyTestObject&apos; to &apos;failureException&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierTest.MockedCopyTestObject.exception&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.CopierTest.MockedCopyTestObject.failureException&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;exception&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java[CopierTest[MockedCopyTestObject^exception" name="failureException" references="true" setter="false" stamp="1278632993247" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract local variable &apos;exception&apos; from expression &apos;new IOException(&quot;stuffs&quot;)&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Variable name: &apos;exception&apos;&#x0D;&#x0A;- Destination method: &apos;com.sgnn7.cpassistant.CopierTest.invokingCopyWithABadFileCopiesAllFilesToTargetButReturnsFailure()&apos;&#x0D;&#x0A;- Variable expression: &apos;new IOException(&quot;stuffs&quot;)&apos;" description="Extract local variable &apos;exception&apos;" final="false" id="org.eclipse.jdt.ui.extract.temp" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java" name="exception" replace="false" selection="1502 25" stamp="1278633316763" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;failureFilename&apos; in &apos;com.sgnn7.cpassistant.CopierTest.MockCopier&apos; to &apos;failureFilenames&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierTest.MockCopier.failureFilename&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.CopierTest.MockCopier.failureFilenames&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;failureFilename&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java[CopierTest[MockCopier^failureFilename" name="failureFilenames" references="true" setter="false" stamp="1278634584287" textual="false" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;filename&apos; in &apos;com.sgnn7.cpassistant.CopierTest.MockCopier.failOnFile(...)&apos; to &apos;filenames&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierTest.MockCopier.failOnFile(List&lt;String&gt;, IOException).filename&apos;&#x0D;&#x0A;- Renamed element: &apos;filename&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;filename&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java[CopierTest[MockCopier~failOnFile~QList\&lt;QString;&gt;;~QIOException;@filename!2460!2480!2473!2480!QList\&lt;QString;&gt;;" name="filenames" references="true" stamp="1278634601115" version="1.0"/>&#x0A;<refactoring comment="Extract constant &apos;DATA&apos; from expression &apos;&quot;data&quot;&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Constant name: &apos;DATA&apos;&#x0D;&#x0A;- Constant expression: &apos;&quot;data&quot;&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of expression with constant" description="Extract constant &apos;DATA&apos;" flags="786432" id="org.eclipse.jdt.ui.extract.constant" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java" name="DATA" qualify="false" replace="true" selection="423 6" stamp="1278635226662" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Move 1 elements(s) to &apos;licenses&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Destination element: &apos;licenses&apos;&#x0D;&#x0A;- Original element: &apos;LICENSE.txt&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move file" element1="lib/LICENSE.txt" files="1" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1278637309105" target="licenses" units="0" version="1.0"/>&#x0A;<refactoring comment="Rename resource &apos;CopyAssistant/licenses/LICENSE.txt&apos; to &apos;LICENSE-commons-io.txt&apos;" description="Rename resource &apos;LICENSE.txt&apos;" flags="7" id="org.eclipse.ltk.core.refactoring.rename.resource" input="licenses/LICENSE.txt" name="LICENSE-commons-io.txt" stamp="1278637318250" updateReferences="true"/>&#x0A;<refactoring comment="Copy 1 elements(s) to &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Destination element: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;data&apos;" description="Copy folder" destination="=CopyAssistant" element1="test-data/data" files="0" flags="589830" folders="1" id="org.eclipse.jdt.ui.copy" policy="org.eclipse.jdt.ui.copyResources" stamp="1278637447602" units="0" version="1.0"/>&#x0A;<refactoring comment="Rename field &apos;TARGET_STAGING_DIR&apos; in &apos;com.sgnn7.cpassistant.CopierTest&apos; to &apos;SOURCE_STAGING_DIR&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierTest.TARGET_STAGING_DIR&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.CopierTest.SOURCE_STAGING_DIR&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" delegate="false" deprecate="false" description="Rename field &apos;TARGET_STAGING_DIR&apos;" flags="589826" getter="false" id="org.eclipse.jdt.ui.rename.field" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java[CopierTest^TARGET_STAGING_DIR" name="SOURCE_STAGING_DIR" references="true" setter="false" stamp="1278637454530" textual="false" version="1.0"/>&#x0A;<refactoring comment="Extract constant &apos;TEST_DATA&apos; from expression &apos;&quot;test-data&quot;&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Constant name: &apos;TEST_DATA&apos;&#x0D;&#x0A;- Constant expression: &apos;&quot;test-data&quot;&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of expression with constant" description="Extract constant &apos;TEST_DATA&apos;" flags="786432" id="org.eclipse.jdt.ui.extract.constant" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java" name="TEST_DATA" qualify="false" replace="true" selection="1328 11" stamp="1278637458903" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void cleanTempDirectories() throws IOException &apos; from &apos;com.sgnn7.cpassistant.CopierTest.clean()&apos; to &apos;com.sgnn7.cpassistant.CopierTest&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Method name: &apos;cleanTempDirectories&apos;&#x0D;&#x0A;- Destination type: &apos;com.sgnn7.cpassistant.CopierTest&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;&#x0D;&#x0A;- Replace occurrences of statements with method" comments="false" description="Extract method &apos;cleanTempDirectories&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java" name="cleanTempDirectories" replace="true" selection="991 89" stamp="1278637577613" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Extract method &apos;private void extracted()&apos; from &apos;com.sgnn7.cpassistant.CopierTest.invokingCopyWithABadFileCopiesAllFilesToTargetAndReturnsFailedOnes()&apos; to &apos;com.sgnn7.cpassistant.CopierTest&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Method name: &apos;extracted&apos;&#x0D;&#x0A;- Destination type: &apos;com.sgnn7.cpassistant.CopierTest&apos;&#x0D;&#x0A;- Declared visibility: &apos;private&apos;" comments="false" description="Extract method &apos;extracted&apos;" destination="0" exceptions="false" flags="786434" id="org.eclipse.jdt.ui.extract.method" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java" name="extracted" replace="false" selection="1921 128" stamp="1278638545929" version="1.0" visibility="2"/>&#x0A;<refactoring comment="Rename method &apos;com.sgnn7.cpassistant.CopierTest.fileItemsInDirectory()&apos; to &apos;getFileItemsInDirectory&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierTest.fileItemsInDirectory()&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.CopierTest.getFileItemsInDirectory()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;fileItemsInDirectory&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java[CopierTest~fileItemsInDirectory" name="getFileItemsInDirectory" references="true" stamp="1278638591161" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.sgnn7.cpassistant.CopierTest.getFileItemsInDirectory()&apos; to &apos;getFileItemsInTargetDirectory&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierTest.getFileItemsInDirectory()&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.CopierTest.getFileItemsInTargetDirectory()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getFileItemsInDirectory&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java[CopierTest~getFileItemsInDirectory" name="getFileItemsInTargetDirectory" references="true" stamp="1278638651829" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.sgnn7.cpassistant.Copier.assertDestinationExists(...)&apos; to &apos;assertDirectoryExists&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.Copier.assertDestinationExists(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.Copier.assertDirectoryExists(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;assertDestinationExists&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.sgnn7.cpassistant{Copier.java[Copier~assertDestinationExists~QString;" name="assertDirectoryExists" references="true" stamp="1278638742669" version="1.0"/>&#x0A;<refactoring comment="Rename local variable &apos;sourceSize&apos; in &apos;com.sgnn7.cpassistant.Copier.targetCannotHoldAllFiles(...)&apos; to &apos;sourcesSize&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.Copier.targetCannotHoldAllFiles(String, long).sourceSize&apos;&#x0D;&#x0A;- Renamed element: &apos;sourceSize&apos;&#x0D;&#x0A;- Update references to refactored element" description="Rename local variable &apos;sourceSize&apos;" id="org.eclipse.jdt.ui.rename.local.variable" input="/src&lt;com.sgnn7.cpassistant{Copier.java[Copier~targetCannotHoldAllFiles~QString;~J@sourceSize!5312!5326!5317!5326!J" name="sourcesSize" references="true" stamp="1278641024439" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;com.sgnn7.cpassistant.CopierTest.MockCopier.canHoldAllFiles&apos; in &apos;com.sgnn7.cpassistant.CopierTest.MockCopier&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierTest.MockCopier.canHoldAllFiles&apos;&#x0D;&#x0A;- Getter method name: &apos;isCanHoldAllFiles&apos;&#x0D;&#x0A;- Setter method name: &apos;setCanHoldAllFiles&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type" comments="false" declaring="true" description="Encapsulate field &apos;canHoldAllFiles&apos;" flags="589830" getter="isCanHoldAllFiles" id="org.eclipse.jdt.ui.self.encapsulate" input="/test&lt;com.sgnn7.cpassistant{CopierTest.java[CopierTest[MockCopier^canHoldAllFiles" insertion="4" setter="setCanHoldAllFiles" stamp="1278641166541" version="1.0" visibility="1"/>&#x0A;<refactoring accessors="true" comment="Delete 1 element(s) from project &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.CopierManager.java&apos;" description="Delete element" element1="/src&lt;com.sgnn7.cpassistant{CopierManager.java" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1278644075719" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.sgnn7.cpassistant.Copier.getItemsFromSources()&apos; to &apos;getFilesFromSources&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.Copier.getItemsFromSources()&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.Copier.getFilesFromSources()&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;getItemsFromSources&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.sgnn7.cpassistant{Copier.java[Copier~getItemsFromSources" name="getFilesFromSources" references="true" stamp="1278644166526" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.sgnn7.cpassistant.Copier.assertDirectoryExists(...)&apos; to &apos;makeDirectoryIfNotExists&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.Copier.assertDirectoryExists(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.Copier.makeDirectoryIfNotExists(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;assertDirectoryExists&apos;" flags="589830" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.sgnn7.cpassistant{Copier.java[Copier~assertDirectoryExists~QString;" name="makeDirectoryIfNotExists" references="true" stamp="1278644298928" version="1.0"/>&#x0A;<refactoring comment="Rename method &apos;com.sgnn7.cpassistant.Copier.sourceFileIsNotInFailedFolder(...)&apos; to &apos;sourceFileIsNotInAFailedFolder&apos;&#x0D;&#x0A;- Original project: &apos;CopyAssistant&apos;&#x0D;&#x0A;- Original element: &apos;com.sgnn7.cpassistant.Copier.sourceFileIsNotInFailedFolder(...)&apos;&#x0D;&#x0A;- Renamed element: &apos;com.sgnn7.cpassistant.Copier.sourceFileIsNotInAFailedFolder(...)&apos;&#x0D;&#x0A;- Update references to refactored element" delegate="false" deprecate="false" description="Rename method &apos;sourceFileIsNotInFailedFolder&apos;" flags="589826" id="org.eclipse.jdt.ui.rename.method" input="/src&lt;com.sgnn7.cpassistant{Copier.java[Copier~sourceFileIsNotInFailedFolder~QFile;~QList\&lt;QString;&gt;;" name="sourceFileIsNotInAFailedFolder" references="true" stamp="1278644313526" version="1.0"/>
</session>